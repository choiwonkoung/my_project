#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<cmath>
using namespace std;
map<long long, long long> mapping;
long long es[65] = { 0, };
double logn(double a, double b) {
	return pow(10, log10(2000000000000000000) / b);
}
long long pow_ll(int a, int b) {
	if (b == 1)return a;
	if (b % 2 == 1) {
		long long tmp = pow_ll(a, b / 2);
		return tmp * tmp * a;
	}
	else {
		long long tmp = pow_ll(a, b / 2);
		return tmp * tmp;
	}
}
void set_e() {
	for (int i = 2;i<=60;i++) {
		es[i]=logn(2000000000000000000, i);
	}
}
long long find_ans(long long n) {
	if (n == 0)return 1000000000000000000;
	if (n == 1)return 0;
	if (n == 2)return 1;
	if (n == 3)return 2;
	if (mapping.find(n) != mapping.end())return mapping[n];
	long long ret=2000000000000000000;
	for (int i = 2; i <= 60; i++) {
		long long s = 1, e = es[i], m;
		for (;;) {
			if (s == e)break;
			m = (s + e) / 2;
			if (pow_ll(m,i) < n) {
				s = m + 1;
			}
			else e = m;
		}
		ret = min(ret, min(abs(n - pow_ll(s-1, i)) + find_ans(s - 1), find_ans(s)+abs(pow_ll(s, i) - n)) + 1);
	}
	mapping[n] = ret;
	return ret;
}
int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	set_e();
	long long n; cin >> n;
	cout << find_ans(n) << endl;
}